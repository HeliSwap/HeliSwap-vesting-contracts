/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Timelock, TimelockInterface } from "../Timelock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "defaultTimeLock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Timelock__AlreadySheduledTo",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes4",
        name: "fn",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "schedule",
        type: "uint256",
      },
    ],
    name: "LockSheduled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "locks",
    outputs: [
      {
        internalType: "uint256",
        name: "schedule",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "fn",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "schedule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161080f38038061080f83398101604081905261002f91610090565b61003833610040565b6001556100a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100a257600080fd5b5051919050565b610757806100b86000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630d66808714610067578063715018a6146100835780638da5cb5b1461008d578063b59432fa146100a8578063f2fde38b146100c9578063fc609d63146100dc575b600080fd5b61007060015481565b6040519081526020015b60405180910390f35b61008b6100ef565b005b6000546040516001600160a01b03909116815260200161007a565b6100bb6100b6366004610442565b61012e565b60405161007a929190610464565b61008b6100d73660046104ba565b6101d3565b61008b6100ea3660046104e3565b61026e565b6000546001600160a01b031633146101225760405162461bcd60e51b815260040161011990610566565b60405180910390fd5b61012c60006103d5565b565b600260205260009081526040902080546001820180549192916101509061059b565b80601f016020809104026020016040519081016040528092919081815260200182805461017c9061059b565b80156101c95780601f1061019e576101008083540402835291602001916101c9565b820191906000526020600020905b8154815290600101906020018083116101ac57829003601f168201915b5050505050905082565b6000546001600160a01b031633146101fd5760405162461bcd60e51b815260040161011990610566565b6001600160a01b0381166102625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610119565b61026b816103d5565b50565b6000546001600160a01b031633146102985760405162461bcd60e51b815260040161011990610566565b6001600160e01b0319831660009081526002602052604090205442116102f0576001600160e01b03198316600090815260026020526040908190205490516306f0005b60e41b81526004810191909152602401610119565b60405180604001604052806001544261030991906105d5565b815260200183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250506001600160e01b031986168152600260209081526040909120835181559083015190915060018201906103799082610661565b509050507f369c03d42edb1a921b8b310009b29200b4baab8aece683a6d3a7e7bca855fe1183600154426103ad91906105d5565b604080516001600160e01b0319909316835260208301919091520160405180910390a1505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160e01b03198116811461043d57600080fd5b919050565b60006020828403121561045457600080fd5b61045d82610425565b9392505050565b82815260006020604081840152835180604085015260005b818110156104985785810183015185820160600152820161047c565b506000606082860101526060601f19601f830116850101925050509392505050565b6000602082840312156104cc57600080fd5b81356001600160a01b038116811461045d57600080fd5b6000806000604084860312156104f857600080fd5b61050184610425565b9250602084013567ffffffffffffffff8082111561051e57600080fd5b818601915086601f83011261053257600080fd5b81358181111561054157600080fd5b87602082850101111561055357600080fd5b6020830194508093505050509250925092565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c908216806105af57607f821691505b6020821081036105cf57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156105f657634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052604160045260246000fd5b601f82111561065c57600081815260208120601f850160051c810160208610156106395750805b601f850160051c820191505b8181101561065857828155600101610645565b5050505b505050565b815167ffffffffffffffff81111561067b5761067b6105fc565b61068f81610689845461059b565b84610612565b602080601f8311600181146106c457600084156106ac5750858301515b600019600386901b1c1916600185901b178555610658565b600085815260208120601f198616915b828110156106f3578886015182559484019460019091019084016106d4565b50858210156107115787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220d15dfa8a4281bf46222d86e92a3598217be763c6b27e368f33e78e0f30b44b1b64736f6c63430008110033";

export class Timelock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    defaultTimeLock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Timelock> {
    return super.deploy(defaultTimeLock, overrides || {}) as Promise<Timelock>;
  }
  getDeployTransaction(
    defaultTimeLock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(defaultTimeLock, overrides || {});
  }
  attach(address: string): Timelock {
    return super.attach(address) as Timelock;
  }
  connect(signer: Signer): Timelock__factory {
    return super.connect(signer) as Timelock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimelockInterface {
    return new utils.Interface(_abi) as TimelockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Timelock {
    return new Contract(address, _abi, signerOrProvider) as Timelock;
  }
}
