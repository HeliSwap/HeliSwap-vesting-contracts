/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  VestingWallet,
  VestingWalletInterface,
} from "../../contracts/VestingWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "beneficiaries",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "cliffPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "freeTokensPercentage",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "startTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "durationSeconds",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cliff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failSafe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "freeTokensPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isBeneficiary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "scheduledTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "duration",
        type: "uint64",
      },
    ],
    name: "updateDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620020ab380380620020ab8339818101604052810190620000379190620006b7565b62000053672cd3504f709f16fc60c01b6200037060201b60201c565b6200006f678ca92a262f11b93660c01b6200037060201b60201c565b6200008b67da73a2ebde50a37260c01b6200037060201b60201c565b620000a7676c3456b303cf245260c01b6200037060201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff160362000119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000110906200082f565b60405180910390fd5b6200013567402134bd391c65f060c01b6200037060201b60201c565b62000151675dbe003e3efad9b360c01b6200037060201b60201c565b86600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001ae677bfd0827d573ca3560c01b6200037060201b60201c565b620001ca67e3e618d304eb4c1960c01b6200037060201b60201c565b60005b86518110156200028657620001f3671e744845c8d697a160c01b6200037060201b60201c565b85818151811062000209576200020862000851565b5b60200260200101516000808984815181106200022a576200022962000851565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806200027d90620008af565b915050620001cd565b50620002a367fae998a719fb4bde60c01b6200037060201b60201c565b8167ffffffffffffffff1660808167ffffffffffffffff1681525050620002db67589476cd48b92a2760c01b6200037060201b60201c565b80600260006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506200032067cee175476701656d60c01b6200037060201b60201c565b8360805167ffffffffffffffff166200033a9190620008fc565b6003819055506200035c67fa2d3b54157e3f0c60c01b6200037060201b60201c565b826004819055505050505050505062000937565b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003b48262000387565b9050919050565b620003c681620003a7565b8114620003d257600080fd5b50565b600081519050620003e681620003bb565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200043c82620003f1565b810181811067ffffffffffffffff821117156200045e576200045d62000402565b5b80604052505050565b60006200047362000373565b905062000481828262000431565b919050565b600067ffffffffffffffff821115620004a457620004a362000402565b5b602082029050602081019050919050565b600080fd5b6000620004d1620004cb8462000486565b62000467565b90508083825260208201905060208402830185811115620004f757620004f6620004b5565b5b835b818110156200052457806200050f8882620003d5565b845260208401935050602081019050620004f9565b5050509392505050565b600082601f830112620005465762000545620003ec565b5b815162000558848260208601620004ba565b91505092915050565b600067ffffffffffffffff8211156200057f576200057e62000402565b5b602082029050602081019050919050565b6000819050919050565b620005a58162000590565b8114620005b157600080fd5b50565b600081519050620005c5816200059a565b92915050565b6000620005e2620005dc8462000561565b62000467565b90508083825260208201905060208402830185811115620006085762000607620004b5565b5b835b81811015620006355780620006208882620005b4565b8452602084019350506020810190506200060a565b5050509392505050565b600082601f830112620006575762000656620003ec565b5b815162000669848260208601620005cb565b91505092915050565b600067ffffffffffffffff82169050919050565b620006918162000672565b81146200069d57600080fd5b50565b600081519050620006b18162000686565b92915050565b600080600080600080600060e0888a031215620006d957620006d86200037d565b5b6000620006e98a828b01620003d5565b975050602088015167ffffffffffffffff8111156200070d576200070c62000382565b5b6200071b8a828b016200052e565b965050604088015167ffffffffffffffff8111156200073f576200073e62000382565b5b6200074d8a828b016200063f565b9550506060620007608a828b01620005b4565b9450506080620007738a828b01620005b4565b93505060a0620007868a828b01620006a0565b92505060c0620007998a828b01620006a0565b91505092959891949750929550565b600082825260208201905092915050565b7f56657374696e6757616c6c65743a20746f6b656e206973207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600062000817602483620007a8565b91506200082482620007b9565b604082019050919050565b600060208201905081810360008301526200084a8162000808565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620008bc8262000590565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620008f157620008f062000880565b5b600182019050919050565b6000620009098262000590565b9150620009168362000590565b925082820190508082111562000931576200093062000880565b5b92915050565b6080516117586200095360003960006109c501526117586000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636039fbdb11610097578063be9a655511610066578063be9a655514610274578063cc5129c214610292578063d33219b4146102ae578063fc0c546a146102cc576100f5565b80636039fbdb146101c8578063810ec23b146101e45780639852595c146102145780639d19b22614610244576100f5565b80631e3c5eb4116100d35780631e3c5eb4146101405780632f502a4a14610170578063402914f51461018e5780634e71d92d146101be576100f5565b80630bc6c96e146100fa5780630fb5a6b41461010457806313d033c014610122575b600080fd5b6101026102ea565b005b61010c610300565b6040516101199190610ff2565b60405180910390f35b61012a610364565b6040516101379190610ff2565b60405180910390f35b61015a60048036038101906101559190611070565b6103aa565b6040516101679190610ff2565b60405180910390f35b61017861042e565b6040516101859190610ff2565b60405180910390f35b6101a860048036038101906101a39190611070565b610474565b6040516101b59190610ff2565b60405180910390f35b6101c66104d6565b005b6101e260048036038101906101dd91906110c9565b610657565b005b6101fe60048036038101906101f99190611149565b61072e565b60405161020b9190610ff2565b60405180910390f35b61022e60048036038101906102299190611070565b610879565b60405161023b9190610ff2565b60405180910390f35b61025e60048036038101906102599190611070565b6108fe565b60405161026b91906111a4565b60405180910390f35b61027c610985565b6040516102899190610ff2565b60405180910390f35b6102ac60048036038101906102a791906111bf565b6109f3565b005b6102b6610a47565b6040516102c391906111fb565b60405180910390f35b6102d4610a60565b6040516102e19190611275565b60405180910390f35b6102fe67c5d4baecabd2583160c01b610a86565b565b600061031667c8cdc46d4caee03d60c01b610a86565b61032a67e676e2e1de7bb0cd60c01b610a86565b61033e677c1c7930fc6ba7cf60c01b610a86565b600260009054906101000a900467ffffffffffffffff1667ffffffffffffffff16905090565b600061037a6704a87b290a7f57f960c01b610a86565b61038e674934562d898404d860c01b610a86565b6103a26705d55d2f53dcb4b760c01b610a86565b600354905090565b60006103c067684dfaafe032a8fe60c01b610a86565b6103d4673ae021c164d4197a60c01b610a86565b6103e8678b60fb0aa1a0f22060c01b610a86565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061044467c5b90222dfa4fb4560c01b610a86565b6104586744689e9ba6b8c85760c01b610a86565b61046c67ebf5733d1921f9fe60c01b610a86565b600454905090565b600061048a670c473248df1c46bb60c01b610a86565b61049e6764105e204f7d7e0460c01b610a86565b6104b26778960e065809195460c01b610a86565b6104bb82610879565b6104c5834261072e565b6104cf91906112bf565b9050919050565b6104ea6703d334aca761764560c01b610a86565b6104fe677c5b248eccd841fb60c01b610a86565b61051267685700a789c1b62c60c01b610a86565b600061051d33610474565b90506105336791f9405591a3899a60c01b610a86565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461058291906112f3565b9250508190555061059d675986f691ee36373460c01b610a86565b6105b1670b9d3e35f1a0448460c01b610a86565b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430826040516105f79190610ff2565b60405180910390a261061367ad8ffa118c876c8460c01b610a86565b61062767a95712c44e4b0cef60c01b610a86565b610654600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610a89565b50565b61066b6781ce388b482ead8460c01b610a86565b61067f67825a77f967fa8f0c60c01b610a86565b610693675124248d59189dd660c01b610a86565b6106c1600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333084610b0f565b6106d5671f1c6bd4baf44f0360c01b610a86565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461072391906112f3565b925050819055505050565b600061074467766e3aa62f478e2160c01b610a86565b61075867df6b8ca981a8d8d760c01b610a86565b61076c67cc238f49db6bc32860c01b610a86565b60006004546000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107ba9190611356565b90506107d0678f84c78fa5e7956a60c01b610a86565b6107e4671451381985e46ece60c01b610a86565b6000610839826000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461083391906112bf565b85610b98565b905061084f6777ad1368e7203a2c60c01b610a86565b610863679dc632cc47c730c360c01b610a86565b808261086f91906112f3565b9250505092915050565b600061088f678b9192c3482e0f6b60c01b610a86565b6108a3679b3af53dfa79098460c01b610a86565b6108b76757082e3a50c2e7aa60c01b610a86565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610914676e8630ff293f471860c01b610a86565b61092867e665b98142dd9d0f60c01b610a86565b61093c67639a4246cf4d85a760c01b610a86565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054119050919050565b600061099b674b61720b6255e13460c01b610a86565b6109af67e3c98d0be4b73a6560c01b610a86565b6109c3671fe643b746e9627360c01b610a86565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b610a0767d084d2021fd5fb8860c01b610a86565b610a1b67548abeb79f34f9ef60c01b610a86565b80600260006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050565b6000610a5d670c963b36cac7f62f60c01b610a86565b90565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b610b0a8363a9059cbb60e01b8484604051602401610aa8929190611387565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d45565b505050565b610b92846323b872dd60e01b858585604051602401610b30939291906113b0565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d45565b50505050565b6000610bae677a6af62e92595b9060c01b610a86565b610bc2671bc59025519b133160c01b610a86565b610bd6671d48813ad6a6c6c760c01b610a86565b6003548267ffffffffffffffff161015610c2f57610bfe672def7d0d15788c0860c01b610a86565b610c1267f348f871eca7fefd60c01b610a86565b610c2667687496ce68ed913460c01b610a86565b60009050610d3f565b610c436797bd65849e4e0cf960c01b610a86565b610c576708f55f667902861560c01b610a86565b610c5f610300565b610c67610985565b610c7191906112f3565b8267ffffffffffffffff161115610cc657610c9667ac40b23c09d6b1d760c01b610a86565b610caa678ed93a87c13931b960c01b610a86565b610cbe6748b16b60acb2c46560c01b610a86565b829050610d3f565b610cda6743d9304acf3d425060c01b610a86565b610cee67f1dc465fa57c47c160c01b610a86565b610d02675738bdafe4c8973260c01b610a86565b610d0a610300565b610d12610985565b8367ffffffffffffffff16610d2791906112bf565b84610d3291906113e7565b610d3c9190611356565b90505b92915050565b6000610da7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610e0c9092919063ffffffff16565b9050600081511115610e075780806020019051810190610dc79190611455565b610e06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfd90611505565b60405180910390fd5b5b505050565b6060610e1b8484600085610e24565b90509392505050565b606082471015610e69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6090611597565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610e929190611628565b60006040518083038185875af1925050503d8060008114610ecf576040519150601f19603f3d011682016040523d82523d6000602084013e610ed4565b606091505b5091509150610ee587838387610ef1565b92505050949350505050565b60608315610f53576000835103610f4b57610f0b85610f66565b610f4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f419061168b565b60405180910390fd5b5b829050610f5e565b610f5d8383610f89565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610f9c5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd09190611700565b60405180910390fd5b6000819050919050565b610fec81610fd9565b82525050565b60006020820190506110076000830184610fe3565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103d82611012565b9050919050565b61104d81611032565b811461105857600080fd5b50565b60008135905061106a81611044565b92915050565b6000602082840312156110865761108561100d565b5b60006110948482850161105b565b91505092915050565b6110a681610fd9565b81146110b157600080fd5b50565b6000813590506110c38161109d565b92915050565b600080604083850312156110e0576110df61100d565b5b60006110ee8582860161105b565b92505060206110ff858286016110b4565b9150509250929050565b600067ffffffffffffffff82169050919050565b61112681611109565b811461113157600080fd5b50565b6000813590506111438161111d565b92915050565b600080604083850312156111605761115f61100d565b5b600061116e8582860161105b565b925050602061117f85828601611134565b9150509250929050565b60008115159050919050565b61119e81611189565b82525050565b60006020820190506111b96000830184611195565b92915050565b6000602082840312156111d5576111d461100d565b5b60006111e384828501611134565b91505092915050565b6111f581611032565b82525050565b600060208201905061121060008301846111ec565b92915050565b6000819050919050565b600061123b61123661123184611012565b611216565b611012565b9050919050565b600061124d82611220565b9050919050565b600061125f82611242565b9050919050565b61126f81611254565b82525050565b600060208201905061128a6000830184611266565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112ca82610fd9565b91506112d583610fd9565b92508282039050818111156112ed576112ec611290565b5b92915050565b60006112fe82610fd9565b915061130983610fd9565b925082820190508082111561132157611320611290565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061136182610fd9565b915061136c83610fd9565b92508261137c5761137b611327565b5b828204905092915050565b600060408201905061139c60008301856111ec565b6113a96020830184610fe3565b9392505050565b60006060820190506113c560008301866111ec565b6113d260208301856111ec565b6113df6040830184610fe3565b949350505050565b60006113f282610fd9565b91506113fd83610fd9565b925082820261140b81610fd9565b9150828204841483151761142257611421611290565b5b5092915050565b61143281611189565b811461143d57600080fd5b50565b60008151905061144f81611429565b92915050565b60006020828403121561146b5761146a61100d565b5b600061147984828501611440565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006114ef602a83611482565b91506114fa82611493565b604082019050919050565b6000602082019050818103600083015261151e816114e2565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611581602683611482565b915061158c82611525565b604082019050919050565b600060208201905081810360008301526115b081611574565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156115eb5780820151818401526020810190506115d0565b60008484015250505050565b6000611602826115b7565b61160c81856115c2565b935061161c8185602086016115cd565b80840191505092915050565b600061163482846115f7565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611675601d83611482565b91506116808261163f565b602082019050919050565b600060208201905081810360008301526116a481611668565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006116d2826116ab565b6116dc8185611482565b93506116ec8185602086016115cd565b6116f5816116b6565b840191505092915050565b6000602082019050818103600083015261171a81846116c7565b90509291505056fea2646970667358221220a93812660273c72ef3051d7d60fb3c8ab62a3f27a67d6248f07a8b1e1ddd484664736f6c63430008110033";

type VestingWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VestingWallet__factory extends ContractFactory {
  constructor(...args: VestingWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenAddress: PromiseOrValue<string>,
    beneficiaries: PromiseOrValue<string>[],
    balances: PromiseOrValue<BigNumberish>[],
    cliffPeriod: PromiseOrValue<BigNumberish>,
    freeTokensPercentage: PromiseOrValue<BigNumberish>,
    startTimestamp: PromiseOrValue<BigNumberish>,
    durationSeconds: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VestingWallet> {
    return super.deploy(
      _tokenAddress,
      beneficiaries,
      balances,
      cliffPeriod,
      freeTokensPercentage,
      startTimestamp,
      durationSeconds,
      overrides || {}
    ) as Promise<VestingWallet>;
  }
  override getDeployTransaction(
    _tokenAddress: PromiseOrValue<string>,
    beneficiaries: PromiseOrValue<string>[],
    balances: PromiseOrValue<BigNumberish>[],
    cliffPeriod: PromiseOrValue<BigNumberish>,
    freeTokensPercentage: PromiseOrValue<BigNumberish>,
    startTimestamp: PromiseOrValue<BigNumberish>,
    durationSeconds: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenAddress,
      beneficiaries,
      balances,
      cliffPeriod,
      freeTokensPercentage,
      startTimestamp,
      durationSeconds,
      overrides || {}
    );
  }
  override attach(address: string): VestingWallet {
    return super.attach(address) as VestingWallet;
  }
  override connect(signer: Signer): VestingWallet__factory {
    return super.connect(signer) as VestingWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingWalletInterface {
    return new utils.Interface(_abi) as VestingWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingWallet {
    return new Contract(address, _abi, signerOrProvider) as VestingWallet;
  }
}
