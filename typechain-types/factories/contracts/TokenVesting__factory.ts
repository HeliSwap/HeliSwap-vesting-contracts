/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TokenVesting,
  TokenVestingInterface,
} from "../../contracts/TokenVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "timelockAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "beneficiaries",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "cliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "freeTokensPercentage",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "startTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "durationSeconds",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TokenVesting__OnlyBeneficiaryAndOwnerHaveRights",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenVesting__OnlyCallableByTimelock",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FailSafeOccurred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "TimelockAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "VestingTokensIncreased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newTimelockAddress",
        type: "address",
      },
    ],
    name: "changeTimelockAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cliff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failSafe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "freeTokensPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isBeneficiary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "scheduledTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "duration",
        type: "uint64",
      },
    ],
    name: "updateDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003034380380620030348339818101604052810190620000379190620009c8565b878686868686866200005e62000052620005b260201b60201c565b620005ba60201b60201c565b6200007a672cd3504f709f16fc60c01b6200067e60201b60201c565b62000096678ca92a262f11b93660c01b6200067e60201b60201c565b620000b267da73a2ebde50a37260c01b6200067e60201b60201c565b620000ce676c3456b303cf245260c01b6200067e60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff160362000140576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001379062000b56565b60405180910390fd5b6200015c67402134bd391c65f060c01b6200067e60201b60201c565b62000178675dbe003e3efad9b360c01b6200067e60201b60201c565b86600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001d5677bfd0827d573ca3560c01b6200067e60201b60201c565b620001f167e3e618d304eb4c1960c01b6200067e60201b60201c565b60005b8651811015620002ae576200021a671e744845c8d697a160c01b6200067e60201b60201c565b85818151811062000230576200022f62000b78565b5b60200260200101516001600089848151811062000252576200025162000b78565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080620002a59062000bd6565b915050620001f4565b50620002cb67fae998a719fb4bde60c01b6200067e60201b60201c565b8167ffffffffffffffff1660808167ffffffffffffffff16815250506200030367589476cd48b92a2760c01b6200067e60201b60201c565b80600360006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506200034867cee175476701656d60c01b6200067e60201b60201c565b8360805167ffffffffffffffff1662000362919062000c23565b6004819055506200038467fa2d3b54157e3f0c60c01b6200067e60201b60201c565b8260058190555050505050505050620003ae6755e75eaebff815c960c01b6200068160201b60201c565b620003ca675babf397c494821160c01b6200068160201b60201c565b620003e667ff978b8816983c1c60c01b6200068160201b60201c565b6200040267ecb50393dcdc58b660c01b6200068160201b60201c565b845186511462000449576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004409062000cd4565b60405180910390fd5b62000465678fc732392582889d60c01b6200068160201b60201c565b62000481671ffb850aa98aa79a60c01b6200068160201b60201c565b6200049d67b8877209d68dfcb660c01b6200068160201b60201c565b620004b967ae95764206fd636060c01b6200068160201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16036200052b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005229062000d6c565b60405180910390fd5b62000547675fcceba4714e5c6f60c01b6200068160201b60201c565b6200056367ff7558ce2100cb9d60c01b6200068160201b60201c565b86600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505062000d8e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006c58262000698565b9050919050565b620006d781620006b8565b8114620006e357600080fd5b50565b600081519050620006f781620006cc565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200074d8262000702565b810181811067ffffffffffffffff821117156200076f576200076e62000713565b5b80604052505050565b60006200078462000684565b905062000792828262000742565b919050565b600067ffffffffffffffff821115620007b557620007b462000713565b5b602082029050602081019050919050565b600080fd5b6000620007e2620007dc8462000797565b62000778565b90508083825260208201905060208402830185811115620008085762000807620007c6565b5b835b81811015620008355780620008208882620006e6565b8452602084019350506020810190506200080a565b5050509392505050565b600082601f830112620008575762000856620006fd565b5b815162000869848260208601620007cb565b91505092915050565b600067ffffffffffffffff82111562000890576200088f62000713565b5b602082029050602081019050919050565b6000819050919050565b620008b681620008a1565b8114620008c257600080fd5b50565b600081519050620008d681620008ab565b92915050565b6000620008f3620008ed8462000872565b62000778565b90508083825260208201905060208402830185811115620009195762000918620007c6565b5b835b81811015620009465780620009318882620008c5565b8452602084019350506020810190506200091b565b5050509392505050565b600082601f830112620009685762000967620006fd565b5b81516200097a848260208601620008dc565b91505092915050565b600067ffffffffffffffff82169050919050565b620009a28162000983565b8114620009ae57600080fd5b50565b600081519050620009c28162000997565b92915050565b600080600080600080600080610100898b031215620009ec57620009eb6200068e565b5b6000620009fc8b828c01620006e6565b985050602062000a0f8b828c01620006e6565b975050604089015167ffffffffffffffff81111562000a335762000a3262000693565b5b62000a418b828c016200083f565b965050606089015167ffffffffffffffff81111562000a655762000a6462000693565b5b62000a738b828c0162000950565b955050608062000a868b828c01620008c5565b94505060a062000a998b828c01620008c5565b93505060c062000aac8b828c01620009b1565b92505060e062000abf8b828c01620009b1565b9150509295985092959890939650565b600082825260208201905092915050565b7f56657374696e6757616c6c65743a20746f6b656e206973207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600062000b3e60248362000acf565b915062000b4b8262000ae0565b604082019050919050565b6000602082019050818103600083015262000b718162000b2f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000be382620008a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000c185762000c1762000ba7565b5b600182019050919050565b600062000c3082620008a1565b915062000c3d83620008a1565b925082820190508082111562000c585762000c5762000ba7565b5b92915050565b7f436f6e7374727563746f72203a3a20486f6c6465727320616e642062616c616e60008201527f6365732064696666657200000000000000000000000000000000000000000000602082015250565b600062000cbc602a8362000acf565b915062000cc98262000c5e565b604082019050919050565b6000602082019050818103600083015262000cef8162000cad565b9050919050565b7f56657374696e6757616c6c65743a2074696d656c6f636b206973207a65726f2060008201527f6164647265737300000000000000000000000000000000000000000000000000602082015250565b600062000d5460278362000acf565b915062000d618262000cf6565b604082019050919050565b6000602082019050818103600083015262000d878162000d45565b9050919050565b60805161228a62000daa6000396000611036015261228a6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063810ec23b116100ad578063be9a655511610071578063be9a6555146102e4578063cc5129c214610302578063d33219b41461031e578063f2fde38b1461033c578063fc0c546a1461035857610121565b8063810ec23b1461021a5780638da5cb5b1461024a5780639852595c146102685780639d19b22614610298578063ac211034146102c857610121565b80632f502a4a116100f45780632f502a4a1461019c578063402914f5146101ba5780634e71d92d146101ea5780636039fbdb146101f4578063715018a61461021057610121565b80630bc6c96e146101265780630fb5a6b41461013057806313d033c01461014e5780631e3c5eb41461016c575b600080fd5b61012e610376565b005b610138610612565b60405161014591906119bb565b60405180910390f35b610156610676565b60405161016391906119bb565b60405180910390f35b61018660048036038101906101819190611a39565b6106bc565b60405161019391906119bb565b60405180910390f35b6101a4610741565b6040516101b191906119bb565b60405180910390f35b6101d460048036038101906101cf9190611a39565b610787565b6040516101e191906119bb565b60405180910390f35b6101f26107e9565b005b61020e60048036038101906102099190611a92565b610ad7565b005b610218610c40565b005b610234600480360381019061022f9190611b12565b610c54565b60405161024191906119bb565b60405180910390f35b610252610da1565b60405161025f9190611b61565b60405180910390f35b610282600480360381019061027d9190611a39565b610dca565b60405161028f91906119bb565b60405180910390f35b6102b260048036038101906102ad9190611a39565b610e4f565b6040516102bf9190611b97565b60405180910390f35b6102e260048036038101906102dd9190611a39565b610ed7565b005b6102ec610ff6565b6040516102f991906119bb565b60405180910390f35b61031c60048036038101906103179190611bb2565b611064565b005b6103266111f3565b6040516103339190611b61565b60405180910390f35b61035660048036038101906103519190611a39565b611259565b005b6103606112dc565b60405161036d9190611c3e565b60405180910390f35b61038a6731f8780a65e2e79660c01b611302565b61039e67eead09907b4565ab60c01b611302565b6103b267e52c2d998514a6dc60c01b611302565b6103c6679c7f2a1b2c6b7b9260c01b611302565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104755761042f67d021024a2e2afcac60c01b611302565b6104436784bdf12ad43b22a960c01b611302565b6040517f31817ba600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610489677d85818dd8a3962960c01b611302565b61049d67b6978da3bb2cba6660c01b611302565b6104b167402f7119740588b460c01b611302565b6104c56728f6d5b74d77245e60c01b611302565b6104d9678cd242e5d5b9be5460c01b611302565b6104ed676a1e1bb3e4719bfa60c01b611302565b6105bc600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661051b610da1565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105769190611b61565b602060405180830381865afa158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b79190611c6e565b611305565b6105d067475cfe8f65d864c060c01b611302565b6105e467aec4a471bd127ef060c01b611302565b7f8fd505a3b8b0ea976aa45502c804d4971e4ff7b2d23c262e1fc69a538732c8fc60405160405180910390a1565b600061062867c8cdc46d4caee03d60c01b61138b565b61063c67e676e2e1de7bb0cd60c01b61138b565b610650677c1c7930fc6ba7cf60c01b61138b565b600360009054906101000a900467ffffffffffffffff1667ffffffffffffffff16905090565b600061068c6704a87b290a7f57f960c01b61138b565b6106a0674934562d898404d860c01b61138b565b6106b46705d55d2f53dcb4b760c01b61138b565b600454905090565b60006106d267684dfaafe032a8fe60c01b61138b565b6106e6673ae021c164d4197a60c01b61138b565b6106fa678b60fb0aa1a0f22060c01b61138b565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061075767c5b90222dfa4fb4560c01b61138b565b61076b6744689e9ba6b8c85760c01b61138b565b61077f67ebf5733d1921f9fe60c01b61138b565b600554905090565b600061079d670c473248df1c46bb60c01b61138b565b6107b16764105e204f7d7e0460c01b61138b565b6107c56778960e065809195460c01b61138b565b6107ce82610dca565b6107d88342610c54565b6107e29190611cca565b9050919050565b6107fd67c0a3cdd3ef53523860c01b611302565b61081167712c779852f2108760c01b611302565b61082567d102825950f29cb660c01b611302565b61083967c196317cbeb2ef4b60c01b611302565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541480156108bb575061088b610da1565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b1561091a576108d46790c99337eb103b1a60c01b611302565b6108e8676013ffa946543f0360c01b611302565b6040517f023dc89300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61092e67c3f1eb126f33328b60c01b611302565b61094267544f2c822baa19f960c01b611302565b610956671e144240078df0b160c01b611302565b61096a67dd995b869a5a080b60c01b611302565b61097e671a2cd90c03444f6860c01b611302565b61099267597d1c41f39a903e60c01b611302565b600061099d33610787565b90506109b36758efc9cab915877960c01b611302565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a029190611cfe565b92505081905550610a1d67c8ae7d5b8423ffe660c01b611302565b610a316745ab9b800de3808b60c01b611302565b610a5e600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383611305565b610a7267e5b5474bbb8f754560c01b611302565b610a866728c3a177deec07cc60c01b611302565b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43082604051610acc91906119bb565b60405180910390a250565b610aeb676f58a6979e435b0160c01b611302565b610af361138e565b610b0767dbc16453fa5995cd60c01b611302565b610b1b67ede7f0c421235a5d60c01b611302565b610b2f67eb1d91961a3e471a60c01b611302565b610b436756e5a884b7484bea60c01b611302565b610b71600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633308461140c565b610b8567d8f5f691aafa529060c01b611302565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bd49190611cfe565b92505081905550610bef67bfa6a453d237821260c01b611302565b610c0367f660d973048385d260c01b611302565b7f9e4233317e22c360153f5e95e84d7efe7d71e2b4da7751fb464c767c4d32daae8282604051610c34929190611d32565b60405180910390a15050565b610c4861138e565b610c526000611495565b565b6000610c6a67766e3aa62f478e2160c01b61138b565b610c7e67df6b8ca981a8d8d760c01b61138b565b610c9267cc238f49db6bc32860c01b61138b565b6000600554600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ce19190611d8a565b9050610cf7678f84c78fa5e7956a60c01b61138b565b610d0b671451381985e46ece60c01b61138b565b6000610d6182600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d5b9190611cca565b85611559565b9050610d776777ad1368e7203a2c60c01b61138b565b610d8b679dc632cc47c730c360c01b61138b565b8082610d979190611cfe565b9250505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610de0678b9192c3482e0f6b60c01b61138b565b610df4679b3af53dfa79098460c01b61138b565b610e086757082e3a50c2e7aa60c01b61138b565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610e65676e8630ff293f471860c01b61138b565b610e7967e665b98142dd9d0f60c01b61138b565b610e8d67639a4246cf4d85a760c01b61138b565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054119050919050565b610eeb67a76a4b58bad9d1db60c01b611302565b610ef361138e565b610f076713de7aa5c701f36a60c01b611302565b610f1b672fa406a1f793ea3360c01b611302565b610f2f676e64aebbf461c42b60c01b611302565b610f43675facfce208f4318a60c01b611302565b7fb8ea5d60c51238d8f1eb785d3c151a26d9c3ca979d86dadaa812fef9a93585e2600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051610f96929190611dbb565b60405180910390a1610fb267b536fc2274cd964960c01b611302565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061100c674b61720b6255e13460c01b61138b565b61102067e3c98d0be4b73a6560c01b61138b565b611034671fe643b746e9627360c01b61138b565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b6110786775d9ace6329afbf160c01b611302565b61108c67eead09907b4565ab60c01b611302565b6110a067e52c2d998514a6dc60c01b611302565b6110b4679c7f2a1b2c6b7b9260c01b611302565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111635761111d67d021024a2e2afcac60c01b611302565b6111316784bdf12ad43b22a960c01b611302565b6040517f31817ba600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611177677d85818dd8a3962960c01b611302565b61118b67b6978da3bb2cba6660c01b611302565b61119f674836a79139e3b5b060c01b611302565b6111b367ba522a755415207560c01b611302565b6111c767ef355a479672ced160c01b611302565b80600360006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050565b60006112096773480d155315390560c01b611302565b61121d674551ecce5337ddee60c01b611302565b61123167149ab13e3213e6ce60c01b611302565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61126161138e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c790611e67565b60405180910390fd5b6112d981611495565b50565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b6113868363a9059cbb60e01b8484604051602401611324929190611d32565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611706565b505050565b50565b6113966117cd565b73ffffffffffffffffffffffffffffffffffffffff166113b4610da1565b73ffffffffffffffffffffffffffffffffffffffff161461140a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140190611ed3565b60405180910390fd5b565b61148f846323b872dd60e01b85858560405160240161142d93929190611ef3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611706565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061156f677a6af62e92595b9060c01b61138b565b611583671bc59025519b133160c01b61138b565b611597671d48813ad6a6c6c760c01b61138b565b6004548267ffffffffffffffff1610156115f0576115bf672def7d0d15788c0860c01b61138b565b6115d367f348f871eca7fefd60c01b61138b565b6115e767687496ce68ed913460c01b61138b565b60009050611700565b6116046797bd65849e4e0cf960c01b61138b565b6116186708f55f667902861560c01b61138b565b611620610612565b611628610ff6565b6116329190611cfe565b8267ffffffffffffffff1611156116875761165767ac40b23c09d6b1d760c01b61138b565b61166b678ed93a87c13931b960c01b61138b565b61167f6748b16b60acb2c46560c01b61138b565b829050611700565b61169b6743d9304acf3d425060c01b61138b565b6116af67f1dc465fa57c47c160c01b61138b565b6116c3675738bdafe4c8973260c01b61138b565b6116cb610612565b6116d3610ff6565b8367ffffffffffffffff166116e89190611cca565b846116f39190611f2a565b6116fd9190611d8a565b90505b92915050565b6000611768826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b90506000815111156117c857808060200190518101906117889190611f98565b6117c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117be90612037565b60405180910390fd5b5b505050565b600033905090565b60606117e484846000856117ed565b90509392505050565b606082471015611832576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611829906120c9565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161185b919061215a565b60006040518083038185875af1925050503d8060008114611898576040519150601f19603f3d011682016040523d82523d6000602084013e61189d565b606091505b50915091506118ae878383876118ba565b92505050949350505050565b6060831561191c576000835103611914576118d48561192f565b611913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190a906121bd565b60405180910390fd5b5b829050611927565b6119268383611952565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156119655781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119999190612232565b60405180910390fd5b6000819050919050565b6119b5816119a2565b82525050565b60006020820190506119d060008301846119ac565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a06826119db565b9050919050565b611a16816119fb565b8114611a2157600080fd5b50565b600081359050611a3381611a0d565b92915050565b600060208284031215611a4f57611a4e6119d6565b5b6000611a5d84828501611a24565b91505092915050565b611a6f816119a2565b8114611a7a57600080fd5b50565b600081359050611a8c81611a66565b92915050565b60008060408385031215611aa957611aa86119d6565b5b6000611ab785828601611a24565b9250506020611ac885828601611a7d565b9150509250929050565b600067ffffffffffffffff82169050919050565b611aef81611ad2565b8114611afa57600080fd5b50565b600081359050611b0c81611ae6565b92915050565b60008060408385031215611b2957611b286119d6565b5b6000611b3785828601611a24565b9250506020611b4885828601611afd565b9150509250929050565b611b5b816119fb565b82525050565b6000602082019050611b766000830184611b52565b92915050565b60008115159050919050565b611b9181611b7c565b82525050565b6000602082019050611bac6000830184611b88565b92915050565b600060208284031215611bc857611bc76119d6565b5b6000611bd684828501611afd565b91505092915050565b6000819050919050565b6000611c04611bff611bfa846119db565b611bdf565b6119db565b9050919050565b6000611c1682611be9565b9050919050565b6000611c2882611c0b565b9050919050565b611c3881611c1d565b82525050565b6000602082019050611c536000830184611c2f565b92915050565b600081519050611c6881611a66565b92915050565b600060208284031215611c8457611c836119d6565b5b6000611c9284828501611c59565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cd5826119a2565b9150611ce0836119a2565b9250828203905081811115611cf857611cf7611c9b565b5b92915050565b6000611d09826119a2565b9150611d14836119a2565b9250828201905080821115611d2c57611d2b611c9b565b5b92915050565b6000604082019050611d476000830185611b52565b611d5460208301846119ac565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611d95826119a2565b9150611da0836119a2565b925082611db057611daf611d5b565b5b828204905092915050565b6000604082019050611dd06000830185611b52565b611ddd6020830184611b52565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611e51602683611de4565b9150611e5c82611df5565b604082019050919050565b60006020820190508181036000830152611e8081611e44565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611ebd602083611de4565b9150611ec882611e87565b602082019050919050565b60006020820190508181036000830152611eec81611eb0565b9050919050565b6000606082019050611f086000830186611b52565b611f156020830185611b52565b611f2260408301846119ac565b949350505050565b6000611f35826119a2565b9150611f40836119a2565b9250828202611f4e816119a2565b91508282048414831517611f6557611f64611c9b565b5b5092915050565b611f7581611b7c565b8114611f8057600080fd5b50565b600081519050611f9281611f6c565b92915050565b600060208284031215611fae57611fad6119d6565b5b6000611fbc84828501611f83565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612021602a83611de4565b915061202c82611fc5565b604082019050919050565b6000602082019050818103600083015261205081612014565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006120b3602683611de4565b91506120be82612057565b604082019050919050565b600060208201905081810360008301526120e2816120a6565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561211d578082015181840152602081019050612102565b60008484015250505050565b6000612134826120e9565b61213e81856120f4565b935061214e8185602086016120ff565b80840191505092915050565b60006121668284612129565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006121a7601d83611de4565b91506121b282612171565b602082019050919050565b600060208201905081810360008301526121d68161219a565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000612204826121dd565b61220e8185611de4565b935061221e8185602086016120ff565b612227816121e8565b840191505092915050565b6000602082019050818103600083015261224c81846121f9565b90509291505056fea2646970667358221220dd61755fe62ccc5caae5c303cd7e7f818a03fdaf45a82e6e1b89846413cfed7264736f6c63430008110033";

type TokenVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenVesting__factory extends ContractFactory {
  constructor(...args: TokenVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenAddress: PromiseOrValue<string>,
    timelockAddress: PromiseOrValue<string>,
    beneficiaries: PromiseOrValue<string>[],
    balances: PromiseOrValue<BigNumberish>[],
    cliff: PromiseOrValue<BigNumberish>,
    freeTokensPercentage: PromiseOrValue<BigNumberish>,
    startTimestamp: PromiseOrValue<BigNumberish>,
    durationSeconds: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenVesting> {
    return super.deploy(
      tokenAddress,
      timelockAddress,
      beneficiaries,
      balances,
      cliff,
      freeTokensPercentage,
      startTimestamp,
      durationSeconds,
      overrides || {}
    ) as Promise<TokenVesting>;
  }
  override getDeployTransaction(
    tokenAddress: PromiseOrValue<string>,
    timelockAddress: PromiseOrValue<string>,
    beneficiaries: PromiseOrValue<string>[],
    balances: PromiseOrValue<BigNumberish>[],
    cliff: PromiseOrValue<BigNumberish>,
    freeTokensPercentage: PromiseOrValue<BigNumberish>,
    startTimestamp: PromiseOrValue<BigNumberish>,
    durationSeconds: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenAddress,
      timelockAddress,
      beneficiaries,
      balances,
      cliff,
      freeTokensPercentage,
      startTimestamp,
      durationSeconds,
      overrides || {}
    );
  }
  override attach(address: string): TokenVesting {
    return super.attach(address) as TokenVesting;
  }
  override connect(signer: Signer): TokenVesting__factory {
    return super.connect(signer) as TokenVesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenVestingInterface {
    return new utils.Interface(_abi) as TokenVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenVesting {
    return new Contract(address, _abi, signerOrProvider) as TokenVesting;
  }
}
